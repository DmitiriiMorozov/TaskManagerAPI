openapi: 3.0.0
info:
  title: TaskManager API
  version: "1.0.0"
  description: >
    TaskManager API — это RESTful API для управления задачами в рамках проектов.
    API позволяет пользователям регистрироваться, аутентифицироваться, создавать, получать,
    обновлять и удалять задачи, а также получать список задач по проекту.
servers:
  - url: https://api.taskmanager.com/v1
paths:
  /api/users/register:
    post:
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя, принимая имя, пароль и email.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
      responses:
        "200":
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "400":
          description: Неверный запрос
  /api/users/login:
    post:
      summary: Аутентификация пользователя
      description: Выполняет вход пользователя и возвращает JWT токен для доступа к защищённым эндпоинтам.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        "200":
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "401":
          description: Неверные учетные данные
  /api/tasks:
    post:
      summary: Создание новой задачи
      description: "Создает новую задачу. Принимает данные задачи: заголовок, описание, дату выполнения, ID проекта и ID назначенного пользователя."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequest'
      responses:
        "200":
          description: Задача успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: Неверный запрос
  /api/tasks/{task_id}:
    get:
      summary: Получение задачи
      description: Возвращает подробную информацию о конкретной задаче по её уникальному идентификатору.
      parameters:
        - name: task_id
          in: path
          description: Уникальный идентификатор задачи
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Задача успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "404":
          description: Задача не найдена
    put:
      summary: Обновление задачи
      description: Обновляет информацию о задаче по заданному идентификатору.
      parameters:
        - name: task_id
          in: path
          description: Уникальный идентификатор задачи для обновления
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateRequest'
      responses:
        "200":
          description: Задача успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          description: Неверный запрос
        "404":
          description: Задача не найдена
    delete:
      summary: Удаление задачи
      description: Удаляет задачу по её уникальному идентификатору.
      parameters:
        - name: task_id
          in: path
          description: Уникальный идентификатор задачи для удаления
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Задача удалена успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Задача не найдена
  /api/projects/{project_id}/tasks:
    get:
      summary: Список задач проекта
      description: Возвращает список всех задач, связанных с указанным проектом.
      parameters:
        - name: project_id
          in: path
          description: Уникальный идентификатор проекта
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Список задач получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        "404":
          description: Проект не найден
components:
  schemas:
    UserRegisterRequest:
      type: object
      description: Запрос для регистрации нового пользователя.
      properties:
        username:
          type: string
          example: johndoe
        password:
          type: string
          example: password123
        email:
          type: string
          example: johndoe@example.com
      required:
        - username
        - password
        - email
    UserResponse:
      type: object
      description: Ответ при успешной регистрации пользователя.
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: johndoe
        email:
          type: string
          example: johndoe@example.com
        token:
          type: string
          example: JWT_TOKEN
    UserLoginRequest:
      type: object
      description: Запрос для аутентификации пользователя.
      properties:
        username:
          type: string
          example: johndoe
        password:
          type: string
          example: password123
      required:
        - username
        - password
    AuthResponse:
      type: object
      description: Ответ при успешной аутентификации.
      properties:
        token:
          type: string
          example: JWT_TOKEN
    TaskCreateRequest:
      type: object
      description: Запрос для создания новой задачи.
      properties:
        title:
          type: string
          example: Fix login bug
        description:
          type: string
          example: Пользователи не могут войти в систему.
        due_date:
          type: string
          format: date-time
          example: 2025-03-30T12:00:00Z
        project_id:
          type: integer
          example: 1
        assigned_to:
          type: integer
          example: 2
      required:
        - title
        - due_date
        - project_id
    TaskUpdateRequest:
      type: object
      description: Запрос для обновления данных задачи.
      properties:
        title:
          type: string
          example: Fix login and registration bug
        description:
          type: string
          example: Исправить ошибку входа и регистрации пользователей.
        due_date:
          type: string
          format: date-time
          example: 2025-04-01T12:00:00Z
        status:
          type: string
          example: in-progress
    Task:
      type: object
      description: Объект задачи.
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: Fix login bug
        description:
          type: string
          example: Пользователи не могут войти в систему.
        due_date:
          type: string
          format: date-time
          example: 2025-03-30T12:00:00Z
        status:
          type: string
          example: pending
        assigned_to:
          type: integer
          example: 2
        project_id:
          type: integer
          example: 1
      required:
        - id
        - title
        - due_date
        - status
        - project_id
